@*http://blog.ppedv.de/post/Boostrap-Modal-Dialog-fur-Blazor*@

@using mitoSoft.Razor.Components.Templates
@using mitoSoft.Razor.DailyTimers.Components.Helpers
@using mitoSoft.Razor.Components
@using mitoSoft.Razor.Components.Enums

@inherits SynchronousDialog

<ModalTemplate Visibility="@base.Visibility" Title="@_clone?.Name" ShowCloseButton="true" OnCloseClicked="@CloseClicked">
    <Content>

        <div class="container">

            <div class="row mb-3 mt-2">
                <input class="form-control" placeholder="@Properties.Resources.Description" type="text" @bind="@_clone.Description">
            </div>

            <div class="row mb-3">
                <div class="form-check">
                    <input type="checkbox" class="form-check-input" id="customCheckActive" @bind="@_clone.Active">
                    <label class="form-check-label" for="customCheckActive">@Properties.Resources.Active</label>
                </div>
            </div>

            <div class="row mb-1">
                <div class="form-check">
                    <input type="checkbox" class="form-check-input" id="customCheckMo" @bind="@_clone.Monday">
                    <label class="form-check-label" for="customCheckMo">@(DayNameHelper.ToDayName(1))</label>
                </div>
            </div>

            <div class="row mb-1">
                <div class="form-check">
                    <input type="checkbox" class="form-check-input" id="customCheckDi" @bind="@_clone.Tuesday">
                    <label class="form-check-label" for="customCheckDi">@(DayNameHelper.ToDayName(2))</label>
                </div>
            </div>

            <div class="row mb-1">
                <div class="form-check">
                    <input type="checkbox" class="form-check-input" id="customCheckMi" @bind="@_clone.Wednesday">
                    <label class="form-check-label" for="customCheckMi">@(DayNameHelper.ToDayName(3))</label>
                </div>
            </div>

            <div class="row mb-1">
                <div class="form-check">
                    <input type="checkbox" class="form-check-input" id="customCheckDo" @bind="@_clone.Thursday">
                    <label class="form-check-label" for="customCheckDo">@(DayNameHelper.ToDayName(4))</label>
                </div>
            </div>

            <div class="row mb-1">
                <div class="form-check">
                    <input type="checkbox" class="form-check-input" id="customCheckFr" @bind="@_clone.Friday">
                    <label class="form-check-label" for="customCheckFr">@(DayNameHelper.ToDayName(5))</label>
                </div>
            </div>

            <div class="row mb-1">
                <div class="form-check">
                    <input type="checkbox" class="form-check-input" id="customCheckSa" @bind="@_clone.Saturday">
                    <label class="form-check-label" for="customCheckSa">@(DayNameHelper.ToDayName(6))</label>
                </div>
            </div>

            <div class="row mb-1">
                <div class="form-check">
                    <input type="checkbox" class="form-check-input" id="customCheckSo" @bind="@_clone.Sunday">
                    <label class="form-check-label" for="customCheckSo">@(DayNameHelper.ToDayName(0))</label>
                </div>
            </div>

            <div class="row mb-3">
                <div class="form-check">
                    <input type="checkbox" class="form-check-input" id="customCheckHolidays" @bind="@_clone.IgnoreOnHolidays">
                    <label class="form-check-label" for="customCheckHolidays">@Properties.Resources.NoHolidays</label>
                </div>
            </div>
        </div>

        <div class="row mb-1">

            <div class="col-auto">
                <div class="aligns-items-center">
                    <label>@($"{Properties.Resources.TriggerTime}:")</label>
                </div>
            </div>

            <div class="col-auto">
                <select class="form-select" @bind="@_hours">
                    @for (int i = 0; i < 24; i++)
                    {
                        <option>@i.ToString().PadLeft(2, '0')</option>
                    }
                </select>
            </div>

            <div class="col-auto">
                <label>:</label>
            </div>

            <div class="col-auto">
                <select class="form-select" @bind="@_minutes">
                    @for (int i = 0; i < 60; i = i + 5)
                    {
                        <option>@i.ToString().PadLeft(2, '0')</option>
                    }
                </select>
            </div>

        </div>

    </Content>
    <Footer>
        <button type="button" class="btn btn-primary" @onclick="@ChannelUpdated">OK</button>
        <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="@CloseClicked">@Properties.Resources.Close</button>
    </Footer>
</ModalTemplate>

@code {
    public IDailyTimer _clone;
    public string _minutes;
    public string _hours;

    [Parameter]
    public Action<MouseEventArgs, IDailyTimer> OnTimerUpdated { get; set; }

    private IDailyTimer _timer;
    public IDailyTimer Timer
    {
        get
        {
            return this._timer;
        }
        set
        {
            this._timer = value;
            this._clone = (IDailyTimer)this.Timer.Clone();
            this._minutes = this._clone.GetDisplayMinute();
            this._hours = this._clone.GetDisplayHour();
        }
    }

    public void Show(IDailyTimer timer)
    {
        this.Timer = timer;

        base.Show();
    }

    public async Task<DialogResult> ShowDialog(IDailyTimer timer)
    {
        this.Show(timer);

        return await base.ShowDialog();
    }

    private void ChannelUpdated(MouseEventArgs e)
    {
        this._clone.CopyTo(this.Timer);
        this.Timer.SwitchTime = $"{this._hours}:{ this._minutes}";

        OnTimerUpdated?.Invoke(e, this.Timer);

        base.Close(DialogResult.OK);
    }

    private void CloseClicked(MouseEventArgs e)
    {
        this.Close(DialogResult.None);
    }
}